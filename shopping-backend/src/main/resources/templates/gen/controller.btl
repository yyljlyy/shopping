package com.luckin.innovation.group.controller;

import com.luckin.innovation.group.entity.${className};
import com.luckin.innovation.group.entity.ResultMsg;
import com.luckin.innovation.group.service.${className}Service;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;

import static org.springframework.data.domain.Sort.Direction.ASC;

@Controller
@RequestMapping("/${st.lower(st.ct(tableName))}")
public class ${className}Controller {
    @Resource
    private ${className}Service ${st.lower(st.ct(tableName))}Service;

     /**
      * 进入列表页面
      *
      * @return
      */
     @RequestMapping(value = "index", method = {RequestMethod.GET})
        public String index() {
            return "${st.lower(st.ct(tableName))}/index";
     }

     /**
      * 进入编辑页面
      *
      * @return
      */
     @RequiresPermissions("auth:user:edit")
        @RequestMapping(value = "edit", method = {RequestMethod.GET})
        public String edit() {
            return "${st.lower(st.ct(tableName))}/edit";
     }
      /**
          * 编辑操作
          * @param permission
          * @return ResultMsg
          */
         @RequestMapping(value = "edit",method = {RequestMethod.POST})
         @ResponseBody
         public ResultMsg update(${className} ${st.lower(st.ct(tableName))}) {
             ${st.lower(st.ct(tableName))}.setUpdatetime(new Date());
             ${className} ${st.lower(st.ct(tableName))} = ${st.lower(st.ct(tableName))}Service.save(${st.lower(st.ct(tableName))});
             ResultMsg result=new ResultMsg();
             result.setData(${st.lower(st.ct(tableName))});
             return result;
         }

     /**
      * 进入新增页面
      *
      * @return
      */
     @RequestMapping(value = "add", method = {RequestMethod.GET})
        public String add() {
            return "${st.lower(st.ct(tableName))}/add";
     }

    @RequestMapping("page")
    @ResponseBody
    public ResultMsg getList(Integer pageNum, Integer pageSize){
        PageRequest pageRequest = PageRequest.of(pageNum -1 , pageSize);
        ResultMsg result=new ResultMsg();
        result.setData(${st.lower(st.ct(tableName))}Service.get${className}List(pageRequest));
        return result;
    }

    @RequestMapping("add")
    @ResponseBody
    public ResultMsg add${className}(${className} ${st.lower(st.ct(tableName))}){
        Integer code = ${st.lower(st.ct(tableName))}Service.save${className}(${st.lower(st.ct(tableName))});
        return ResultMsg.ok();
    }

    @RequestMapping("del")
    @ResponseBody
    public ResultMsg del${className}(Long id){
        Integer code = ${st.lower(st.ct(tableName))}Service.delete${className}(id);
        return ResultMsg.ok();
    }

    @RequestMapping("findById")
    @ResponseBody
    public ResultMsg findById(Long id){
        ${className} byId = ${st.lower(st.ct(tableName))}Service.findById(id);
        ResultMsg msg = new ResultMsg();
        msg.setData(byId);
        return msg;
    }
}
